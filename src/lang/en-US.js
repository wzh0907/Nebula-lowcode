export default {
  fm: {
    components: {
      fields: {
        input: 'Input',
        antdInput: 'Antd Input',
        textarea: '多行文本',
        number: 'Number',
        radio: 'Radio',
        checkbox: 'Checkbox',
        time: 'Time',
        date: 'Date',
        rate: 'Rate',
        color: 'Color',
        select: 'Select',
        switch: 'Switch',
        slider: 'Slider',
        herf: 'Herf',
        text: 'Text',
        html: 'HTML',
        button: 'Button',
        antButton: 'Ant Button',
        btnType: 'Btn Type',
        btnIcon: 'Btn Icon',
        btnShape: 'Btn Shape',
        btnSize: 'Btn Size',
        btnGhost: 'Btn Ghost',
        textHtml: 'text Html',
        customImgupload: 'custom Imgupload',
        blank: 'Custom',
        fileupload: 'File',
        imgupload: 'Image',
        editor: 'Editor',
        cascader: 'Cascader',
        table: 'Sub-table',
        tableForm: 'Table Form',
        grid: 'Grid',
        tabs: 'Tabs',
        divider: 'Divider',
        customDivider: 'Custom Divider',
        listComponent: 'ListComponent',
        dropDownMenu: 'Drop Down Menu',
        chartTypes: 'Chart Types',
        discountChart: 'DiscountChart',
        histogramCharts: 'Histogram Charts',
        pieCharts: 'Pie Charts',
        barCharts: 'Bar Charts',
        scatterCharts: 'Scatter Charts',
        ringCharts: 'Ring Charts',
        waterfallCharts: 'Waterfall Charts',
        funnelCharts: 'funnel Charts',
        heatmapCharts: 'heatmap Charts',
        radarCharts: 'radar Charts',
        radioCard: 'Radio Card',
        processBar: 'Process Bar',
        customDataCard: 'Custon Data Card',
        contentPlaceholder: 'Content Placeholder',
        pageHeader: 'Page Header',
        iconLibrary: 'Icon Library',
        antdTable: 'Antd Table',
        crossTab: 'Cross Tab',
        antdList: 'Antd List'
        // drawerControl: 'Drawer Control'
      },
      basic: {
        title: 'Basic Component'
      },
      advance: {
        title: 'Advance Component'
      },
      layout: {
        title: 'Layout'
      }
    },
    description: {
      containerEmpty: 'You can drag and drop the item from the left to add components',
      configEmpty: 'Please add a component',
      tableEmpty: 'You can drag and drop the item from the left to add components',
      uploadJsonInfo: 'There is the format of JSON below，you can overwrite it with you own JSON code'
    },
    message: {
      copySuccess: 'Copy Successed',
      validError: 'Form data validation failed'
    },
    actions: {
      import: 'Import JSON',
      clear: 'Clear',
      preview: 'Preview',
      json: 'Generate JSON',
      saveJson: 'Save Json',
      switchMode: 'Switch Mode',
      editJson: 'Edit Json',
      code: 'Generate Code',
      editCode: 'Edit Code',
      imgupload: 'Img Upload',
      getData: 'Get Data',
      reset: 'Reset',
      copyData: 'Copy Data',
      cancel: 'Cancel',
      confirm: 'Confirm',
      addOption: 'Add Option',
      addFormOption: 'Add Form Option',
      addColumn: 'Add Column',
      addTab: 'Add Tab',
      upload: 'Upload',
      add: 'Add',
      undo: 'Undo',
      redo: 'Redo'
    },
    config: {
      form: {
        title: 'Form Attribute',
        labelPosition: {
          title: 'Label Position',
          left: 'Left',
          right: 'Right',
          reportName: 'ReportName',
          top: 'Top'
        },
        labelWidth: 'Label Width',
        size: 'Size',
        customClass: 'Custom Class'
      },
      widget: {
        title: 'Component Attribute',
        model: 'ID',
        name: 'Name',
        width: 'Width',
        height: 'Height',
        size: 'Size',
        labelWidth: 'Label Width',
        custom: 'Custom',
        placeholder: 'Placeholder',
        layout: 'Layout',
        block: 'Block',
        inline: 'Inline',
        contentPosition: 'Content Position',
        contentDirection: 'Content Direction',
        labelSize: 'Label Size',
        transverse: 'Tran Sverse',
        noDirection: 'no Direction',
        portrait: 'por Trait',
        left: 'Left',
        right: 'Right',
        center: 'Center',
        showInput: 'Display Input Box',
        min: 'Minimum',
        max: 'Maximum',
        maxLength: 'Max Length',
        prefixIcon: 'PrefixIcon',
        suffixIcon: 'Suffix Icon',
        step: 'Step',
        multiple: 'Multiple',
        filterable: 'Searchable',
        allowHalf: 'Allow Half',
        showAlpha: 'Support transparency options',
        showLabel: 'Show lable',
        option: 'Option',
        staticData: 'Static Data',
        remoteData: 'Remote Date',
        backendData: 'Backen dData',
        remoteFunc: 'Remote Function',
        remoteAssigned: 'Assigned Variable',
        value: 'Value',
        label: 'Label',
        childrenOption: 'Sub-Option',
        defaultValue: 'Default Value',
        showType: 'Display type',
        opertBtn: 'Opert Btn',
        textHtmlName: 'Text Html Name',
        opertChangeBtn: 'Opert Change Btn',
        interfaceData: 'Interface data',
        dataSheet: 'Data Sheet',
        interfaceDatas: 'Interface datas',
        interfaceCall: 'Interface Call',
        textHtmlColor: 'Text Html Color',
        refreshData: 'Refresh Data',
        pageGoUrl: 'Page Go Url',
        opertSlider: 'Opert Slider',
        remoteCall: 'Remote Call',
        dimension: 'Dimension',
        quata: 'Quata',
        isRange: 'Range Time',
        isTimestamp: 'Get time stamp',
        startPlaceholder: 'Placeholder of start time',
        endPlaceholder: 'Placeholder of end time',
        format: 'Format',
        limit: 'Maximum Upload Count',
        customImgupload: 'Custom Img Upload',
        customIconupload: 'Custom Icon Upload',
        isQiniu: 'Upload with Qiniu Cloud',
        tokenFunc: 'A funchtin to get Qiniu Uptoken',
        imageAction: 'Picture upload address',
        tip: 'Text Prompt',
        action: 'Upload Address',
        defaultType: 'Data Type',
        string: 'String',
        object: 'Object',
        array: 'Array',
        number: 'Number',
        boolean: 'Boolean',
        integer: 'Integer',
        float: 'Float',
        url: 'URL',
        email: 'E-mail',
        hex: 'Hexadecimal',
        flex: 'Flex Layout',
        responsive: 'Responsive Layout',
        gutter: 'Grid Spacing',
        bgColor: 'Bg Color',
        menuOptions: 'Menu Options',
        columnOption: 'Column Configuration',
        span: 'Grid spans',
        justify: 'Horizontal Arrangement',
        justifyStart: 'Start',
        justifyEnd: 'End',
        justifyCenter: 'Center',
        justifySpaceAround: 'Space Around',
        justifySpaceBetween: 'Space Between',
        align: 'Vertical Arrangement',
        alignTop: 'Top',
        alignMiddle: 'Middle',
        alignBottom: 'Bottom',
        type: 'Type',
        default: 'Default',
        labelSizeSmall: 'label Size Small',
        labelSizelarge: 'label Size Large',
        card: 'Tabs',
        borderCard: 'Border-Card',
        tabPosition: 'Tab Position',
        top: 'Tob',
        bottom: 'Bottom',
        tabOption: 'Label Configuration',
        tabName: 'Tab Name',
        customClass: 'Custom Class',
        attribute: 'Attribute Action',
        headers: 'Request headers',
        dataBind: 'Data Binding',
        hidden: 'Hidden',
        readonly: 'Read Only',
        disabled: 'Disabled',
        editable: 'Text box is editable',
        clearable: 'Display Clear Button',
        arrowControl: 'Use the arrow for time selection',
        isDelete: 'Deletable',
        isEdit: 'Editable',
        showPassword: 'Display Password',
        showScore: 'Show Score',
        validate: 'Validation',
        required: 'Required',
        patternPlaceholder: 'Fill in the regular expressions',
        newOption: 'New Option',
        tab: 'Tab',
        validatorRequired: 'Required',
        validatorType: 'Invaild format',
        validatorPattern: 'Unmatched pattern',
        alignMent: 'Align Ment',
        basicsSetting: 'Basics Setting',
        seniorSetting: 'Senior Setting',
        pageSetting: 'Page Setting',
        eventConfig: 'Event Config',
        associatedKeyTitle: 'associatedKeyTitle',
        dataRefresh: 'Data Refresh',
        versionControl: 'version Control',
        extendedConfigurate: 'Extended Configurate',
        iconRouter: 'Icon Router'
      }
    },
    upload: {
      preview: 'preview',
      edit: 'replace',
      delete: 'delete'
    }
  }
}
